// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "11/28/2024 19:45:08"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          lab6_digital_comparator
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module lab6_digital_comparator_vlg_vec_tst();
// constants                                           
// general purpose registers
reg inA0;
reg inA1;
reg InA2;
reg InA3;
reg inB0;
reg inB1;
reg InB2;
reg InB3;
reg inEq;
reg inGT;
reg inLT;
// wires                                               
wire outEQ_Verilog;
wire outEQ_VHDL;
wire outGT_Verilog;
wire outGT_VHDL;
wire outLT_Verilog;
wire outLT_VHDL;

// assign statements (if any)                          
lab6_digital_comparator i1 (
// port map - connection between master ports and signals/registers   
	.inA0(inA0),
	.inA1(inA1),
	.InA2(InA2),
	.InA3(InA3),
	.inB0(inB0),
	.inB1(inB1),
	.InB2(InB2),
	.InB3(InB3),
	.inEq(inEq),
	.inGT(inGT),
	.inLT(inLT),
	.outEQ_Verilog(outEQ_Verilog),
	.outEQ_VHDL(outEQ_VHDL),
	.outGT_Verilog(outGT_Verilog),
	.outGT_VHDL(outGT_VHDL),
	.outLT_Verilog(outLT_Verilog),
	.outLT_VHDL(outLT_VHDL)
);
initial 
begin 
#1000000 $finish;
end 

// inA0
always
begin
	inA0 = 1'b0;
	inA0 = #100000 1'b1;
	#100000;
end 

// inA1
initial
begin
	repeat(7)
	begin
		inA1 = 1'b0;
		inA1 = #71429 1'b1;
		# 71428;
	end
	inA1 = 1'b0;
end 

// InA2
initial
begin
	repeat(9)
	begin
		InA2 = 1'b0;
		InA2 = #55556 1'b1;
		# 55555;
	end
	InA2 = 1'b0;
end 

// InA3
always
begin
	InA3 = 1'b0;
	InA3 = #50000 1'b1;
	#50000;
end 

// inB0
initial
begin
	repeat(11)
	begin
		inB0 = 1'b0;
		inB0 = #45455 1'b1;
		# 45454;
	end
	inB0 = 1'b0;
end 

// inB1
initial
begin
	repeat(12)
	begin
		inB1 = 1'b0;
		inB1 = #41667 1'b1;
		# 41666;
	end
	inB1 = 1'b0;
end 

// InB2
initial
begin
	repeat(13)
	begin
		InB2 = 1'b0;
		InB2 = #38462 1'b1;
		# 38461;
	end
	InB2 = 1'b0;
end 

// InB3
initial
begin
	repeat(14)
	begin
		InB3 = 1'b0;
		InB3 = #35714 1'b1;
		# 35714;
	end
	InB3 = 1'b0;
end 

// inEq
initial
begin
	repeat(15)
	begin
		inEq = 1'b0;
		inEq = #33333 1'b1;
		# 33333;
	end
	inEq = 1'b0;
end 

// inGT
always
begin
	inGT = 1'b0;
	inGT = #31250 1'b1;
	#31250;
end 

// inLT
initial
begin
	repeat(17)
	begin
		inLT = 1'b0;
		inLT = #29412 1'b1;
		# 29411;
	end
	inLT = 1'b0;
end 
endmodule

