/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2020  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("input0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("input1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("input2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("input3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("input4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("input5")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("input6")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("input7")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("select1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("select2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("select4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("inputEZ")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("output1_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("output1_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("output2_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("output2_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("input0")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
		}
	}
}

TRANSITION_LIST("input1")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 71.429;
			LEVEL 1 FOR 71.428;
			LEVEL 0 FOR 71.429;
			LEVEL 1 FOR 71.428;
			LEVEL 0 FOR 71.429;
			LEVEL 1 FOR 71.428;
			LEVEL 0 FOR 71.429;
			LEVEL 1 FOR 71.428;
			LEVEL 0 FOR 71.429;
			LEVEL 1 FOR 71.428;
			LEVEL 0 FOR 71.429;
			LEVEL 1 FOR 71.428;
			LEVEL 0 FOR 71.429;
			LEVEL 1 FOR 71.428;
			LEVEL 0 FOR 0.001;
		}
	}
}

TRANSITION_LIST("input2")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 55.556;
			LEVEL 1 FOR 55.555;
			LEVEL 0 FOR 55.556;
			LEVEL 1 FOR 55.555;
			LEVEL 0 FOR 55.556;
			LEVEL 1 FOR 55.555;
			LEVEL 0 FOR 55.556;
			LEVEL 1 FOR 55.555;
			LEVEL 0 FOR 55.556;
			LEVEL 1 FOR 55.555;
			LEVEL 0 FOR 55.556;
			LEVEL 1 FOR 55.555;
			LEVEL 0 FOR 55.556;
			LEVEL 1 FOR 55.555;
			LEVEL 0 FOR 55.556;
			LEVEL 1 FOR 55.555;
			LEVEL 0 FOR 55.556;
			LEVEL 1 FOR 55.555;
			LEVEL 0 FOR 0.001;
		}
	}
}

TRANSITION_LIST("input3")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 45.455;
			LEVEL 1 FOR 45.454;
			LEVEL 0 FOR 45.455;
			LEVEL 1 FOR 45.454;
			LEVEL 0 FOR 45.455;
			LEVEL 1 FOR 45.454;
			LEVEL 0 FOR 45.455;
			LEVEL 1 FOR 45.454;
			LEVEL 0 FOR 45.455;
			LEVEL 1 FOR 45.454;
			LEVEL 0 FOR 45.455;
			LEVEL 1 FOR 45.454;
			LEVEL 0 FOR 45.455;
			LEVEL 1 FOR 45.454;
			LEVEL 0 FOR 45.455;
			LEVEL 1 FOR 45.454;
			LEVEL 0 FOR 45.455;
			LEVEL 1 FOR 45.454;
			LEVEL 0 FOR 45.455;
			LEVEL 1 FOR 45.454;
			LEVEL 0 FOR 45.455;
			LEVEL 1 FOR 45.454;
			LEVEL 0 FOR 0.001;
		}
	}
}

TRANSITION_LIST("input4")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 38.462;
			LEVEL 1 FOR 38.461;
			LEVEL 0 FOR 38.462;
			LEVEL 1 FOR 38.461;
			LEVEL 0 FOR 38.462;
			LEVEL 1 FOR 38.461;
			LEVEL 0 FOR 38.462;
			LEVEL 1 FOR 38.461;
			LEVEL 0 FOR 38.462;
			LEVEL 1 FOR 38.461;
			LEVEL 0 FOR 38.462;
			LEVEL 1 FOR 38.461;
			LEVEL 0 FOR 38.462;
			LEVEL 1 FOR 38.461;
			LEVEL 0 FOR 38.462;
			LEVEL 1 FOR 38.461;
			LEVEL 0 FOR 38.462;
			LEVEL 1 FOR 38.461;
			LEVEL 0 FOR 38.462;
			LEVEL 1 FOR 38.461;
			LEVEL 0 FOR 38.462;
			LEVEL 1 FOR 38.461;
			LEVEL 0 FOR 38.462;
			LEVEL 1 FOR 38.461;
			LEVEL 0 FOR 38.462;
			LEVEL 1 FOR 38.461;
			LEVEL 0 FOR 0.001;
		}
	}
}

TRANSITION_LIST("input5")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 33.333;
			LEVEL 1 FOR 33.333;
			LEVEL 0 FOR 33.333;
			LEVEL 1 FOR 33.333;
			LEVEL 0 FOR 33.333;
			LEVEL 1 FOR 33.333;
			LEVEL 0 FOR 33.333;
			LEVEL 1 FOR 33.333;
			LEVEL 0 FOR 33.333;
			LEVEL 1 FOR 33.333;
			LEVEL 0 FOR 33.333;
			LEVEL 1 FOR 33.333;
			LEVEL 0 FOR 33.333;
			LEVEL 1 FOR 33.333;
			LEVEL 0 FOR 33.333;
			LEVEL 1 FOR 33.333;
			LEVEL 0 FOR 33.333;
			LEVEL 1 FOR 33.333;
			LEVEL 0 FOR 33.333;
			LEVEL 1 FOR 33.333;
			LEVEL 0 FOR 33.333;
			LEVEL 1 FOR 33.333;
			LEVEL 0 FOR 33.333;
			LEVEL 1 FOR 33.333;
			LEVEL 0 FOR 33.333;
			LEVEL 1 FOR 33.333;
			LEVEL 0 FOR 33.333;
			LEVEL 1 FOR 33.333;
			LEVEL 0 FOR 33.333;
			LEVEL 1 FOR 33.333;
			LEVEL 0 FOR 0.01;
		}
	}
}

TRANSITION_LIST("input6")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 29.412;
			LEVEL 1 FOR 29.411;
			LEVEL 0 FOR 29.412;
			LEVEL 1 FOR 29.411;
			LEVEL 0 FOR 29.412;
			LEVEL 1 FOR 29.411;
			LEVEL 0 FOR 29.412;
			LEVEL 1 FOR 29.411;
			LEVEL 0 FOR 29.412;
			LEVEL 1 FOR 29.411;
			LEVEL 0 FOR 29.412;
			LEVEL 1 FOR 29.411;
			LEVEL 0 FOR 29.412;
			LEVEL 1 FOR 29.411;
			LEVEL 0 FOR 29.412;
			LEVEL 1 FOR 29.411;
			LEVEL 0 FOR 29.412;
			LEVEL 1 FOR 29.411;
			LEVEL 0 FOR 29.412;
			LEVEL 1 FOR 29.411;
			LEVEL 0 FOR 29.412;
			LEVEL 1 FOR 29.411;
			LEVEL 0 FOR 29.412;
			LEVEL 1 FOR 29.411;
			LEVEL 0 FOR 29.412;
			LEVEL 1 FOR 29.411;
			LEVEL 0 FOR 29.412;
			LEVEL 1 FOR 29.411;
			LEVEL 0 FOR 29.412;
			LEVEL 1 FOR 29.411;
			LEVEL 0 FOR 29.412;
			LEVEL 1 FOR 29.411;
			LEVEL 0 FOR 29.412;
			LEVEL 1 FOR 29.411;
			LEVEL 0 FOR 0.009;
		}
	}
}

TRANSITION_LIST("input7")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 26.316;
			LEVEL 1 FOR 26.315;
			LEVEL 0 FOR 26.316;
			LEVEL 1 FOR 26.315;
			LEVEL 0 FOR 26.316;
			LEVEL 1 FOR 26.315;
			LEVEL 0 FOR 26.316;
			LEVEL 1 FOR 26.315;
			LEVEL 0 FOR 26.316;
			LEVEL 1 FOR 26.315;
			LEVEL 0 FOR 26.316;
			LEVEL 1 FOR 26.315;
			LEVEL 0 FOR 26.316;
			LEVEL 1 FOR 26.315;
			LEVEL 0 FOR 26.316;
			LEVEL 1 FOR 26.315;
			LEVEL 0 FOR 26.316;
			LEVEL 1 FOR 26.315;
			LEVEL 0 FOR 26.316;
			LEVEL 1 FOR 26.315;
			LEVEL 0 FOR 26.316;
			LEVEL 1 FOR 26.315;
			LEVEL 0 FOR 26.316;
			LEVEL 1 FOR 26.315;
			LEVEL 0 FOR 26.316;
			LEVEL 1 FOR 26.315;
			LEVEL 0 FOR 26.316;
			LEVEL 1 FOR 26.315;
			LEVEL 0 FOR 26.316;
			LEVEL 1 FOR 26.315;
			LEVEL 0 FOR 26.316;
			LEVEL 1 FOR 26.315;
			LEVEL 0 FOR 26.316;
			LEVEL 1 FOR 26.315;
			LEVEL 0 FOR 26.316;
			LEVEL 1 FOR 26.315;
			LEVEL 0 FOR 26.316;
			LEVEL 1 FOR 26.315;
			LEVEL 0 FOR 0.011;
		}
	}
}

TRANSITION_LIST("select1")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
		}
	}
}

TRANSITION_LIST("select2")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
	}
}

TRANSITION_LIST("select4")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 33.333;
			LEVEL 1 FOR 33.333;
			LEVEL 0 FOR 33.333;
			LEVEL 1 FOR 33.333;
			LEVEL 0 FOR 33.333;
			LEVEL 1 FOR 33.333;
			LEVEL 0 FOR 33.333;
			LEVEL 1 FOR 33.333;
			LEVEL 0 FOR 33.333;
			LEVEL 1 FOR 33.333;
			LEVEL 0 FOR 33.333;
			LEVEL 1 FOR 33.333;
			LEVEL 0 FOR 33.333;
			LEVEL 1 FOR 33.333;
			LEVEL 0 FOR 33.333;
			LEVEL 1 FOR 33.333;
			LEVEL 0 FOR 33.333;
			LEVEL 1 FOR 33.333;
			LEVEL 0 FOR 33.333;
			LEVEL 1 FOR 33.333;
			LEVEL 0 FOR 33.333;
			LEVEL 1 FOR 33.333;
			LEVEL 0 FOR 33.333;
			LEVEL 1 FOR 33.333;
			LEVEL 0 FOR 33.333;
			LEVEL 1 FOR 33.333;
			LEVEL 0 FOR 33.333;
			LEVEL 1 FOR 33.333;
			LEVEL 0 FOR 33.333;
			LEVEL 1 FOR 33.333;
			LEVEL 0 FOR 0.01;
		}
	}
}

TRANSITION_LIST("inputEZ")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 500.0;
			LEVEL 1 FOR 500.0;
		}
	}
}

TRANSITION_LIST("output1_1")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 49.999;
			LEVEL 0 FOR 0.001;
			LEVEL 1 FOR 66.665;
			LEVEL 0 FOR 17.544;
			LEVEL 1 FOR 15.789;
			LEVEL 0 FOR 33.333;
			LEVEL 1 FOR 33.333;
			LEVEL 0 FOR 11.114;
			LEVEL 1 FOR 22.219;
			LEVEL 0 FOR 0.003;
			LEVEL 1 FOR 33.33;
			LEVEL 0 FOR 12.824;
			LEVEL 1 FOR 6.784;
			LEVEL 0 FOR 13.725;
			LEVEL 1 FOR 1.754;
			LEVEL 0 FOR 26.316;
			LEVEL 1 FOR 5.267;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 4.545;
			LEVEL 0 FOR 45.455;
			LEVEL Z FOR 500.0;
		}
	}
}

TRANSITION_LIST("output1_2")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 49.999;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 66.665;
			LEVEL 1 FOR 17.544;
			LEVEL 0 FOR 15.789;
			LEVEL 1 FOR 33.333;
			LEVEL 0 FOR 33.333;
			LEVEL 1 FOR 11.114;
			LEVEL 0 FOR 22.219;
			LEVEL 1 FOR 0.003;
			LEVEL 0 FOR 33.33;
			LEVEL 1 FOR 12.824;
			LEVEL 0 FOR 6.784;
			LEVEL 1 FOR 13.725;
			LEVEL 0 FOR 1.754;
			LEVEL 1 FOR 26.316;
			LEVEL 0 FOR 5.267;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 4.545;
			LEVEL 1 FOR 45.455;
			LEVEL Z FOR 500.0;
		}
	}
}

TRANSITION_LIST("output2_1")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 49.999;
			LEVEL 0 FOR 0.001;
			LEVEL 1 FOR 66.665;
			LEVEL 0 FOR 17.544;
			LEVEL 1 FOR 15.789;
			LEVEL 0 FOR 33.333;
			LEVEL 1 FOR 33.333;
			LEVEL 0 FOR 11.114;
			LEVEL 1 FOR 22.219;
			LEVEL 0 FOR 0.003;
			LEVEL 1 FOR 33.33;
			LEVEL 0 FOR 12.824;
			LEVEL 1 FOR 6.784;
			LEVEL 0 FOR 13.725;
			LEVEL 1 FOR 1.754;
			LEVEL 0 FOR 26.316;
			LEVEL 1 FOR 5.267;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 4.545;
			LEVEL 0 FOR 45.455;
			LEVEL Z FOR 500.0;
		}
	}
}

TRANSITION_LIST("output2_2")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 49.999;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 66.665;
			LEVEL 1 FOR 17.544;
			LEVEL 0 FOR 15.789;
			LEVEL 1 FOR 33.333;
			LEVEL 0 FOR 33.333;
			LEVEL 1 FOR 11.114;
			LEVEL 0 FOR 22.219;
			LEVEL 1 FOR 0.003;
			LEVEL 0 FOR 33.33;
			LEVEL 1 FOR 12.824;
			LEVEL 0 FOR 6.784;
			LEVEL 1 FOR 13.725;
			LEVEL 0 FOR 1.754;
			LEVEL 1 FOR 26.316;
			LEVEL 0 FOR 5.267;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 4.545;
			LEVEL 1 FOR 45.455;
			LEVEL Z FOR 500.0;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "input0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "input1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "input2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "input3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "input4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "input5";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "input6";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "input7";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "select1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "select2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "select4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "inputEZ";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "output1_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "output1_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "output2_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "output2_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
