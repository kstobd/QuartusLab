// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "10/24/2024 14:08:24"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          Schem_1_1
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Schem_1_1_vlg_vec_tst();
// constants                                           
// general purpose registers
reg in_A;
reg in_B;
// wires                                               
wire out_Verilog;
wire out_VHDL;

// assign statements (if any)                          
Schem_1_1 i1 (
// port map - connection between master ports and signals/registers   
	.in_A(in_A),
	.in_B(in_B),
	.out_Verilog(out_Verilog),
	.out_VHDL(out_VHDL)
);
initial 
begin 
#1000000 $finish;
end 

// in_A
always
begin
	in_A = 1'b0;
	in_A = #100000 1'b1;
	#100000;
end 

// in_B
always
begin
	in_B = 1'b0;
	in_B = #50000 1'b1;
	#50000;
end 
endmodule

